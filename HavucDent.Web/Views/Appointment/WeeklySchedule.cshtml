@model IDictionary<int, IEnumerable<HavucDent.Domain.Entities.Appointment>>

@{
	Layout = "~/Views/Shared/_LayoutAdminLTE.cshtml";
	var currentWeekStart = (DateTime)ViewBag.StartDate;
	var nextWeekStart = currentWeekStart.AddDays(7);
	var prevWeekStart = currentWeekStart.AddDays(-7);

	var dayAbbreviations = new Dictionary<DayOfWeek, string>
	{
		{ DayOfWeek.Monday, "Pzt" },
		{ DayOfWeek.Tuesday, "Sal" },
		{ DayOfWeek.Wednesday, "Çar" },
		{ DayOfWeek.Thursday, "Per" },
		{ DayOfWeek.Friday, "Cum" },
		{ DayOfWeek.Saturday, "Cmt" },
		{ DayOfWeek.Sunday, "Paz" }
	};

	var doctors = ViewBag.Doctors as List<HavucDent.Domain.Entities.Doctor>;
}

<div class="content-wrapper">
	<section class="content-header">
		<div class="container-fluid">
			<div class="d-flex justify-content-between align-items-center mb-3">
				<button class="btn btn-primary" id="prevWeek">
					<i class="fas fa-arrow-left"></i> Önceki Hafta
				</button>

				<div class="text-center">
					<h2>Haftalık Randevu Planı: @currentWeekStart.ToString("dd.MM.yyyy") - @nextWeekStart.AddDays(-1).ToString("dd.MM.yyyy")</h2>
					<div class="form-group d-inline-block">
						<label for="doctorSelect" class="mr-2 font-weight-bold">Doktor Seçin:</label>
						<select id="doctorSelect" class="form-control d-inline-block">
							<option value="">Tüm Doktorlar</option>
							@foreach (var doctor in doctors)
							{
								<!option value="@doctor.Id" @(doctor.Id == (int?)ViewBag.DoctorId ? "selected=\"selected\"" : "")>
								Dr. @doctor.FirstName @doctor.LastName
								</!option>
							}
						</select>
					</div>
				</div>

				<button class="btn btn-primary" id="nextWeek">
					Sonraki Hafta <i class="fas fa-arrow-right"></i>
				</button>
			</div>
		</div>
	</section>

	<section class="content">
		<div class="container-fluid">
			<div class="row justify-content-center">
				@foreach (var doctorAppointments in Model)
				{
					<div class="doctor-schedule mb-5 col-md-12">
						<h4 class="text-center">Dr. @(doctors.FirstOrDefault(d => d.Id == doctorAppointments.Key)?.FirstName) @(doctors.FirstOrDefault(d => d.Id == doctorAppointments.Key)?.LastName)</h4>
						<div class="d-flex justify-content-start flex-wrap">
							@foreach (var day in Enumerable.Range(0, 7))
							{
								var date = currentWeekStart.AddDays(day);
								var dayAbbreviation = dayAbbreviations[date.DayOfWeek];
								<div class="day-schedule card shadow-sm mx-1 mb-4" style="width: 220px;">
									<div class="card-header bg-primary text-white text-center">
										<h5 class="mb-0">@date.ToString("dd.MM.yyyy") @dayAbbreviation</h5>
									</div>
									<div class="card-body appointment-slots">
										@for (var hour = 9; hour < 22; hour++)
										{
											<div class="d-flex justify-content-between mb-2">
												@for (var minute = 0; minute < 60; minute += 30)
												{
													var slotTime = date.AddHours(hour).AddMinutes(minute);
													var appointment = doctorAppointments.Value.FirstOrDefault(a => a.AppointmentDate == slotTime);
													var slotClass = appointment != null && !appointment.IsAvailable ? "booked" : "available";
													var slotText = appointment != null && !appointment.IsAvailable ? "Dolu" : "Boş";

													<div class="slot @slotClass text-center">
														<span class="time">@slotTime.ToString("HH:mm") - @slotTime.AddMinutes(30).ToString("HH:mm")</span>
														<span class="status d-block">@slotText</span>
													</div>
												}
											</div>
										}
									</div>
								</div>
							}
						</div>
					</div>
				}
			</div>
		</div>
	</section>
</div>




<div class="modal fade" id="appointmentModal" tabindex="-1" aria-labelledby="appointmentModalLabel" aria-hidden="true">
	<div class="modal-dialog modal-lg">
		<div class="modal-content">
			<div class="modal-header">
				<h5 class="modal-title" id="appointmentModalLabel">Randevu Kaydı</h5>
				<button type="button" class="close" data-dismiss="modal" aria-label="Close">
					<span aria-hidden="true">&times;</span>
				</button>
			</div>
			<div class="modal-body">
				<form id="appointmentForm">
					<div class="row">
						<div class="col-md-6 form-group">
							<label for="tcNumber">TC Kimlik No</label>
							<input type="text" id="tcNumber" class="form-control" maxlength="11" placeholder="TC Kimlik No" required>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 form-group">
							<label for="patientName">Ad</label>
							<input type="text" id="patientName" class="form-control" disabled>
						</div>
						<div class="col-md-6 form-group">
							<label for="patientSurname">Soyad</label>
							<input type="text" id="patientSurname" class="form-control" disabled>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 form-group">
							<label for="patientEmail">Email</label>
							<input type="email" id="patientEmail" class="form-control" disabled>
						</div>
						<div class="col-md-6 form-group">
							<label for="patientPhone">Telefon</label>
							<input type="text" id="patientPhone" class="form-control" disabled>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6 form-group">
							<label for="patientBirthDate">Doğum Tarihi</label>
							<input type="date" id="patientBirthDate" class="form-control" disabled>
						</div>
						<div class="col-md-6 form-group">
							<label for="patientAddress">Adres</label>
							<textarea id="patientAddress" class="form-control" disabled></textarea>
						</div>
					</div>





					<button type="submit" class="btn btn-primary">Randevuyu Kaydet</button>
				</form>
			</div>
		</div>
	</div>
</div>


@section Scripts {
	<script>
		document.getElementById("doctorSelect").addEventListener("change", function () {
			const doctorId = this.value;
			const startDate = "@currentWeekStart.ToString("yyyy-MM-dd")";
			window.location.href = `/Appointment/WeeklySchedule?doctorId=${doctorId}&startDate=${startDate}`;
		});

		document.getElementById("prevWeek").addEventListener("click", function () {
			const startDate = "@prevWeekStart.ToString("yyyy-MM-dd")";
			const doctorId = "@ViewBag.DoctorId";
			window.location.href = `/Appointment/WeeklySchedule?startDate=${startDate}&doctorId=${doctorId}`;
		});

		document.getElementById("nextWeek").addEventListener("click", function () {
			const startDate = "@nextWeekStart.ToString("yyyy-MM-dd")";
			const doctorId = "@ViewBag.DoctorId";
			window.location.href = `/Appointment/WeeklySchedule?startDate=${startDate}&doctorId=${doctorId}`;
		});




		// Boş slotlara/randevulara tıklama işleminde modal açılması
		document.querySelectorAll('.available').forEach(slot => {
			slot.addEventListener('click', function () {
				$('#appointmentModal').modal('show');
			});
		});

		// TC Kimlik numarası 11 hane olduğunda sorgu başlat
		document.getElementById('tcNumber').addEventListener('input', function () {
			const tcNumber = this.value;
			if (tcNumber.length === 11) {
				$.ajax({
					url: '/Appointment/GetPatientByTc',
					type: 'GET',
					data: { tcNumber },
					success: function (data) {
						if (data.exists) {
							// Hasta kayıtlı, bilgileri doldur ve inputları kilitle
							$('#patientName').val(data.patient.firstName).prop('disabled', true);
							$('#patientSurname').val(data.patient.lastName).prop('disabled', true);
							$('#patientEmail').val(data.patient.email).prop('disabled', true);
							$('#patientPhone').val(data.patient.phoneNumber).prop('disabled', true);
							$('#patientAddress').val(data.patient.address).prop('disabled', true);
							if (data.patient.birthDate) {
								const birthDate = new Date(data.patient.birthDate);
								const year = birthDate.getFullYear();
								const month = String(birthDate.getMonth() + 1).padStart(2, '0');
								const day = String(birthDate.getDate()).padStart(2, '0');
								$('#patientBirthDate').val(`${year}-${month}-${day}`).prop('disabled', true);
							} else {
								$('#patientBirthDate').val('').prop('disabled', true);
							}
						} else {
							// Hasta kayıtlı değil, inputları aç
							$('#patientName').prop('disabled', false).val('');
							$('#patientSurname').prop('disabled', false).val('');
							$('#patientEmail').prop('disabled', false).val('');
							$('#patientPhone').prop('disabled', false).val('');
							$('#patientAddress').prop('disabled', false).val('');
							$('#patientBirthDate').prop('disabled', false).val('');
						}
					},
					error: function () {
						alert("Hasta bilgisi alınırken bir hata oluştu.");
					}
				});
			} else {
				$('#patientName').val('').prop('disabled', true);
				$('#patientSurname').val('').prop('disabled', true);
				$('#patientEmail').val('').prop('disabled', true);
				$('#patientPhone').val('').prop('disabled', true);
				$('#patientAddress').val('').prop('disabled', true);
				$('#patientBirthDate').val('').prop('disabled', true);
			}
		});

		// Randevu formu submit olduğunda
		$('#appointmentForm').submit(function (e) {
			e.preventDefault();
			const formData = $(this).serialize();
			$.ajax({
				url: '/Appointment/CreateAppointment',
				type: 'POST',
				data: formData,
				success: function (response) {
					if (response.success) {
						$('#appointmentModal').modal('hide');
						location.reload(); // Sayfayı yenileyerek yeni randevuyu göster
					} else {
						alert('Randevu oluşturulurken bir hata oluştu.');
					}
				}
			});
		});


	</script>
}

<style>
	.doctor-schedule {
		border-radius: 8px;
	}

	.day-schedule {
		border-radius: 8px;
	}

	.appointment-slots {
		display: flex;
		flex-direction: column;
		gap: 4px;
	}

	.slot {
		padding: 6px;
		border-radius: 5px;
		text-align: center;
		font-size: 0.85em;
		font-weight: bold;
		width: 100px;
		margin: 2px;
	}

	.available {
		background-color: #28a745;
		color: white;
	}

	.booked {
		background-color: #dc3545;
		color: white;
	}

	.time {
		display: block;
		font-size: 0.85em;
		font-weight: normal;
	}

	.status {
		font-size: 0.75em;
		font-style: italic;
	}
</style>
